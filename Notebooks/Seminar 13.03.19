{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Seminar 13.03.19","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python2","display_name":"Python 2"}},"cells":[{"metadata":{"id":"IRu84IzPtVuY","colab_type":"text"},"cell_type":"markdown","source":["Даны \n","\n","x1| 2 | 4 | 7 | 10 | 12|\n","\n","x2| 4 | 2 | 6 |  5  |  8 |\n","\n","a) Евклидово расстояние \n","\n","б) расстояние махаланобиса"]},{"metadata":{"id":"n8gyBd6Ztp2l","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"46bef0a5-65bb-4130-d379-dc2ffb13bb7b","executionInfo":{"status":"ok","timestamp":1552459676113,"user_tz":-180,"elapsed":675,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["x1 = [2,4,7,10,12]\n","x2 = [4,2,6,5,8]\n","\n","204./5"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["40.8"]},"metadata":{"tags":[]},"execution_count":28}]},{"metadata":{"id":"8FICWAKxz0YG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"7bfde737-a3a8-4185-be77-8bd96fcfd4a2","executionInfo":{"status":"ok","timestamp":1552459933642,"user_tz":-180,"elapsed":641,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["sumy = 0\n","for i in range(5):\n","  sumy +=(x2[i]-np.mean(x2))**2\n","(sumy/5.)**0.5"],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.0"]},"metadata":{"tags":[]},"execution_count":37}]},{"metadata":{"id":"KByOZDOb1CF3","colab_type":"text"},"cell_type":"markdown","source":["Корень из дисперсии"]},{"metadata":{"id":"AAoyTpx40XEn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"dc67f1a1-d762-4234-822c-f600bd9d51e2","executionInfo":{"status":"ok","timestamp":1552459860003,"user_tz":-180,"elapsed":679,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["2.82*3.68"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10.3776"]},"metadata":{"tags":[]},"execution_count":35}]},{"metadata":{"id":"A3ojP7Uyt4SV","colab_type":"code","colab":{}},"cell_type":"code","source":["import matplotlib.pyplot as plt"],"execution_count":0,"outputs":[]},{"metadata":{"id":"B_qAqL2wt72d","colab_type":"code","outputId":"01577e65-0fa6-48af-8904-2321a6473786","executionInfo":{"status":"ok","timestamp":1552458260173,"user_tz":-180,"elapsed":606,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}},"colab":{"base_uri":"https://localhost:8080/","height":364}},"cell_type":"code","source":["plt.scatter(x1,x2)"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f50de0dc490>"]},"metadata":{"tags":[]},"execution_count":6},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAdkAAAFKCAYAAABRtSXvAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi40LCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcv7US4rQAAFOZJREFUeJzt3X9s1IX9x/FX+7kfTdsDr+1RqRNG\nZBdNzOIlcxsMHXZlZLItGQbbNMjMlm2MoSzZIoxMR0K2pWRLUCTWrLI/ZsiqVbFLtkkQmvAHaNDG\nhWSm1r/4UeDaHvTW0uP6ab9/8LXfr/PoHdzn3btrn4+/vLtPPvfOO41PPp/rj7KpqakpAQAAz5UX\negAAAOYqIgsAgBEiCwCAESILAIARIgsAgBEiCwCAEZ/XJ4zHk56eLxyuVCIx5uk55xt26A32mD92\nmD92mD+vdxiJhG74WtFfyfp8TqFHKHns0BvsMX/sMH/sMH+zucOijywAAKWKyAIAYITIAgBghMgC\nAGCEyAIAYITIAgBghMgCAGCEyAIAYCTrb3waHR3V9u3bdeXKFaXTaf3sZz/TAw88MBuzAQDgqVTa\n1cDgqNy0q6Df/pdSZI3sG2+8oWXLlukXv/iFLl68qO9///v65z//aT4YAABecScn1Xm0X719cQ0n\nU6oJBRWLRtTcuFxOud1N3axnDofDunz5siRpZGRE4XDYbBgAACx0Hu3XkVNnNTSS0tSUNDSS0pFT\nZ9V5tN/0fbNGdt26dTp//rzWrFmjjRs3avv27aYDAQDgpVTaVW9fPONrvX2DSqVds/fOerv4zTff\nVENDg1566SV9+OGH2rlzp15//fUbHh8OV3r+y5dn+gsHyA079AZ7zB87zB87vDkDg6MaTqYyvpZI\njssJ+BWpqzJ576yRff/997Vq1SpJ0t13361Lly7JdV05TuaQev0nmCKRkOd/Pm++YYfeYI/5Y4f5\nY4c3z027qgkFNTTy2dCGQxVyr6Xz2mlef+pu6dKl+uCDDyRJ586dU1VV1Q0DCwBAsQn6HcWikYyv\nxaJ1pt9lnPVKtrm5WTt37tTGjRs1MTGhXbt2mQ0DAICF5sblkq5/BptIjiscqlAsWjf9vJWyqamp\nKS9P6PVtDG6N5I8deoM95o8d5o8d5ieVduUE/HKvpT27gs3rdjEAAHNF0O9ocV3VrPwiConIAgBg\nhsgCAGCEyAIAYITIAgBghMgCAGCEyAIAYITIAgBghMgCAGCEyAIAYITIAgBghMgCAGCEyAIAYITI\nAgBghMgCAGCEyAIAYITIAgBghMgCAGCEyAIAYITIAgBghMgCAGCEyAIAYITIAgBghMgCAGCEyAIA\nYITIAgBghMgCAGCEyAIAYITIAgBghMgCAGCEyAIAYITIAgBghMgCAGCEyAIAYITIAgBghMgCAGDE\nl+2AV199Vd3d3dOPT58+rd7eXtOhAACYC7JGdsOGDdqwYYMk6d1339U//vEP86EAAJgLbup28f79\n+7VlyxarWQAAmFNyjuy//vUvLV68WJFIxHIeAADmjLKpqampXA585plntG7dOn3lK1+Z8biJCVc+\nn+PJcAAAlLKcI7t27Vr97W9/UyAQmPG4eDzpyWCfiERCnp9zvmGH3mCP+WOH+WOH+fN6h5FI6Iav\n5XS7+OLFi6qqqsoaWAAA8H9yimw8HldNTY31LAAAzCk5Rfbee+9VR0eH9SwAAMwp/MYnAACMEFkA\nAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACM\nEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZ\nAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAA\njBBZYA5IpV1dSowplXYLPQqA/8eXy0Hd3d3q6OiQz+fTk08+qdWrVxuPBSAX7uSkOo/2q7cvruGR\nlGoWBBWLRtTcuFxOOf+GBgota2QTiYT279+v1157TWNjY9q3bx+RBYpE59F+HTl1dvrx0Ehq+nFr\nU7RQYwH4X1n/qXvixAmtWLFC1dXVWrRokXbv3j0bcwHIIpV21dsXz/hab98gt46BIpD1Svbs2bMa\nHx/X5s2bNTIyoieeeEIrVqy44fHhcKV8PsfTISORkKfnm4/YoTeKaY8Dg6MaTqYyvpZIjssJ+BWp\nq5rlqbIrph2WKnaYv9naYU6fyV6+fFnPP/+8zp8/r02bNunYsWMqKyvLeGwiMebpgJFISPF40tNz\nzjfs0BvFtkc37aomFNTQyGdDGw5VyL2WLqp5peLbYSlih/nzeoczBTvr7eLa2lrFYjH5fD4tWbJE\nVVVVGh4e9mw4ALcm6HcUi0YyvhaL1ino9/aOEoCblzWyq1at0smTJzU5OalEIqGxsTGFw+HZmA1A\nFs2Ny9X0pc+pdkGFysuk2gUVavrS59TcuLzQowFQDreL6+vrtXbtWj366KOSpF//+tcq50cDgKLg\nlJertSmqR75+l678J6WF1UGuYIEiktNnsi0tLWppabGeBcAtCvodLQpXFnoMAP+FS1IAAIwQWQAA\njBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQ\nWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkA\nAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZACgR\nqbSrgcFRpdJuoUdBjnzZDnjnnXe0bds2feELX5AkRaNRPf300+aDAQCucycn1Xm0X719cQ0nU6oJ\nBRWLRtTcuFxOOddKxSxrZCXpy1/+sp577jnrWQAAGXQe7deRU2enHw+NpKYftzZFCzUWcsA/gQCg\niKXSrnr74hlf6+0b5NZxkcvpSra/v1+bN2/WlStXtHXrVn3ta1+74bHhcKV8PsezASUpEgl5er75\niB16gz3mjx3enIHBUQ0nUxlfSyTH5QT8itRVzfJUpW+2vg6zRvbzn/+8tm7dqm9961s6c+aMNm3a\npMOHDysQCGQ8PpEY83TASCSkeDzp6TnnG3boDfaYP3Z489y0q5pQUEMjnw1tOFQh91qand4kr78O\nZwp21tvF9fX1evjhh1VWVqYlS5aorq5OFy9e9Gw4AMCNBf2OYtFIxtdi0ToF/d7eOYS3sl7Jdnd3\nKx6P64c//KHi8biGhoZUX18/G7MBACQ1Ny6XdP0z2ERyXOFQhWLRuunnUbyyRraxsVG//OUv9fbb\nbyudTmvXrl03vFUMAPCeU16u1qaoHvn6XXICfrnX0lzBloiska2urlZ7e/tszAIAmEHQ7yhSV8Vn\nsCWEH+EBAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUA\nwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAI\nkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEF\nAMAIkQUAwEhRRzaVdjUwOKpU2i30KAAA3DRfLgeNj4/r29/+trZs2aL169dbzyR3clKdR/vV2xfX\ncDKlmlBQsWhEzY3L5ZQX9b8LAACYllNkX3jhBS1cuNB6lmmdR/t15NTZ6cdDI6npx61N0VmbAwCA\nfGS9LPz444/V39+v1atXz8I4128R9/bFM77W2zfIrWMAQMnIeiXb1tamp59+WocOHcrphOFwpXw+\n55YHGhgc1XAylfG1RHJcTsCvSF3VLZ9/vopEQoUeYU5gj/ljh/ljh/mbrR3OGNlDhw7pvvvu0513\n3pnzCROJsbwGctOuakJBDY18NrThUIXca2nF48m83mO+iURC7MwD7DF/7DB/7DB/Xu9wpmDPGNme\nnh6dOXNGPT09unDhggKBgG6//XatXLnSs+H+W9DvKBaNfOoz2U/EonUK+m/9KhkAgNk0Y2T37t07\n/d/79u3THXfcYRrYTzQ3Lpd0/TPYRHJc4VCFYtG66ecBACgFOX138WxzysvV2hTVI1+/S07AL/da\nmitYAEDJyTmyTzzxhOUcGQX9jiJ1VXz+AAAoSfxmBwAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkA\nAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACM\nEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZ\nAACMEFkAAIwQWQAAjBBZAACMEFkAAIwQWQAAjBBZAACMEFkAAIz4sh1w9epV7dixQ0NDQ0qlUtqy\nZYseeuih2ZgNAICSljWyx44d07333qsf/ehHOnfunH7wgx8QWQAAcpA1sg8//PD0fw8MDKi+vt50\nIAAA5oqskf1ES0uLLly4oPb2dst5AACYM8qmpqamcj343//+t5566il1d3errKws4zETE658Psez\nAQEAKFVZr2RPnz6t2tpaLV68WPfcc49c19Xw8LBqa2szHp9IjHk6YCQSUjye9PSc8w079AZ7zB87\nzB87zJ/XO4xEQjd8LeuP8Jw6dUoHDhyQJA0ODmpsbEzhcNiz4QAAmKuyRralpUXDw8NqbW3Vj3/8\nYz3zzDMqL+fHawEAyCbr7eKKigr98Y9/nI1ZAACYU7gkBQDACJEFAMAIkQUAwAiRBQDACJEFAMAI\nkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEF\nAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDA\nCJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwAiRBQDACJEFAMAIkQUAwIgvl4P27Nmj9957TxMTE/rJ\nT36ib37zm9ZzwSOptKuBwVG5aVdBv1PocQBgXska2ZMnT+qjjz5SZ2enEomEvve97xHZEuBOTqrz\naL96++IaTqZUEwoqFo2ouXG5nHJuYADAbMga2fvvv19f/OIXJUkLFizQ1atX5bquHIeromLWebRf\nR06dnX48NJKaftzaFC3UWAAwr2S9pHEcR5WVlZKkrq4uPfjggwS2yKXSrnr74hlf6+0bVCrtzvJE\nADA/5fSZrCQdOXJEXV1dOnDgwIzHhcOV8vm8jXAkEvL0fHPdwOCohpOpjK8lkuNyAn5F6qpmeaq5\nga/F/LHD/LHD/M3WDnOK7PHjx9Xe3q6Ojg6FQjMPlkiMeTLYJyKRkOLxpKfnnOvctKuaUFBDI58N\nbThUIfdamp3eAr4W88cO88cO8+f1DmcKdtbbxclkUnv27NGLL76o2267zbOhYCfodxSLRjK+FovW\n8V3GADBLsl7J/v3vf1cikdDPf/7z6efa2trU0NBgOhjy09y4XNL1z2ATyXGFQxWKReumnwcA2Cub\nmpqa8vKEXt/G4NZIflJpV07AL/damivYPPG1mD92mD92mL+iul2M0hb0O1pcV0VgAaAAiCwAAEaI\nLAAARogsAABGiCwAAEaILAAARogsAABGiCwAAEaILAAARjz/jU8AAOA6rmQBADBCZAEAMEJkAQAw\nQmQBADBCZAEAMEJkAQAwUtSR3bNnj5qbm/XII4/o8OHDhR6nZI2Pj6upqUmvv/56oUcpSd3d3fru\nd7+r9evXq6enp9DjlJzR0VFt3bpVjz32mFpaWnT8+PFCj1RS+vr61NTUpJdfflmSNDAwoMcee0yt\nra3atm2brl27VuAJi1+mHT7++OPauHGjHn/8ccXjcbP3LtrInjx5Uh999JE6OzvV0dGh3/3ud4Ue\nqWS98MILWrhwYaHHKEmJREL79+/XwYMH1d7errfffrvQI5WcN954Q8uWLdNf/vIXPfvss/rtb39b\n6JFKxtjYmHbv3q0VK1ZMP/fcc8+ptbVVBw8e1NKlS9XV1VXACYtfph3u3btXjz76qF5++WWtWbNG\nf/7zn83ev2gje//99+vZZ5+VJC1YsEBXr16V67oFnqr0fPzxx+rv79fq1asLPUpJOnHihFasWKHq\n6motWrRIu3fvLvRIJSccDuvy5cuSpJGREYXD4QJPVDoCgYD+9Kc/adGiRdPPvfPOO/rGN74hSXro\noYd04sSJQo1XEjLt8De/+Y3Wrl0r6dNfnxaKNrKO46iyslKS1NXVpQcffFCO4xR4qtLT1tamHTt2\nFHqMknX27FmNj49r8+bNam1t5X9ot2DdunU6f/681qxZo40bN2r79u2FHqlk+Hw+VVRUfOq5q1ev\nKhAISJJqa2tNb3XOBZl2WFlZKcdx5LquDh48qO985zt27292Zo8cOXJEXV1dOnDgQKFHKTmHDh3S\nfffdpzvvvLPQo5S0y5cv6/nnn9f58+e1adMmHTt2TGVlZYUeq2S8+eabamho0EsvvaQPP/xQO3fu\n5PsDPMJvxb11ruvqqaee0le/+tVP3Ur2WlFH9vjx42pvb1dHR4dCoVChxyk5PT09OnPmjHp6enTh\nwgUFAgHdfvvtWrlyZaFHKxm1tbWKxWLy+XxasmSJqqqqNDw8rNra2kKPVjLef/99rVq1SpJ09913\n69KlS3JdlztTt6iyslLj4+OqqKjQxYsXP3UbFLn71a9+paVLl2rr1q2m71O0t4uTyaT27NmjF198\nUbfddluhxylJe/fu1WuvvaZXXnlFGzZs0JYtWwjsTVq1apVOnjypyclJJRIJjY2N8ZniTVq6dKk+\n+OADSdK5c+dUVVVFYPOwcuVKvfXWW5Kkw4cP64EHHijwRKWnu7tbfr9fTz75pPl7Fe1f4ens7NS+\nffu0bNmy6efa2trU0NBQwKlK1759+3THHXdo/fr1hR6l5Pz1r3+d/g7On/70p9PfdILcjI6OaufO\nnRoaGtLExIS2bdtmentuLjl9+rTa2tp07tw5+Xw+1dfX6w9/+IN27NihVCqlhoYG/f73v5ff7y/0\nqEUr0w6HhoYUDAZVXV0tSbrrrru0a9cuk/cv2sgCAFDqivZ2MQAApY7IAgBghMgCAGCEyAIAYITI\nAgBghMgCAGCEyAIAYITIAgBg5H8AAihl1MlkpQUAAAAASUVORK5CYII=\n","text/plain":["<Figure size 576x396 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"AENS1ubat-It","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"outputId":"221f99f8-74d8-4011-c194-77715bdf76b2","executionInfo":{"status":"ok","timestamp":1552458301290,"user_tz":-180,"elapsed":620,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["x=[]\n","for i in range(len(x1)):\n","  x.append([x1[i],x2[i]])\n","  \n","dist =[]\n","for i in range(len(x)):\n","  for j in range(i,len(x)):\n","    dist.append(((x[i][0]-x[j][0])**2+((x[i][1]-x[j][1])**2))**0.5)\n","    \n","print dist"],"execution_count":8,"outputs":[{"output_type":"stream","text":["[0.0, 2.8284271247461903, 5.385164807134504, 8.06225774829855, 10.770329614269007, 0.0, 5.0, 6.708203932499369, 10.0, 0.0, 3.1622776601683795, 5.385164807134504, 0.0, 3.605551275463989, 0.0]\n"],"name":"stdout"}]},{"metadata":{"id":"BP5ExW5EuZVk","colab_type":"code","colab":{}},"cell_type":"code","source":["import numpy as np"],"execution_count":0,"outputs":[]},{"metadata":{"id":"d8MWOnWNuhbk","colab_type":"code","colab":{}},"cell_type":"code","source":["mat  = np.ones((5,5))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"kUgc6FedumMV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":102},"outputId":"57f0e1f2-cf27-4dd2-97f7-8fdc76a66738","executionInfo":{"status":"ok","timestamp":1552458562945,"user_tz":-180,"elapsed":667,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["o=0\n","for i in range(5):\n","  for j in range(i,5):\n","    mat[i][j] = dist[o]\n","    o+=1\n","print mat"],"execution_count":17,"outputs":[{"output_type":"stream","text":["[[ 0.          2.82842712  5.38516481  8.06225775 10.77032961]\n"," [ 1.          0.          5.          6.70820393 10.        ]\n"," [ 1.          1.          0.          3.16227766  5.38516481]\n"," [ 1.          1.          1.          0.          3.60555128]\n"," [ 1.          1.          1.          1.          0.        ]]\n"],"name":"stdout"}]},{"metadata":{"id":"M4mKvCOTu2Fd","colab_type":"code","colab":{}},"cell_type":"code","source":["mat = mat.transpose()"],"execution_count":0,"outputs":[]},{"metadata":{"id":"uRDRAo_Qu6z8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":102},"outputId":"f2df8b5a-616b-4342-d324-df0784c2940d","executionInfo":{"status":"ok","timestamp":1552458627614,"user_tz":-180,"elapsed":647,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["o=0\n","for i in range(5):\n","  for j in range(i,5):\n","    mat[i][j] = dist[o]\n","    o+=1\n","print mat"],"execution_count":22,"outputs":[{"output_type":"stream","text":["[[ 0.          2.82842712  5.38516481  8.06225775 10.77032961]\n"," [ 2.82842712  0.          5.          6.70820393 10.        ]\n"," [ 5.38516481  5.          0.          3.16227766  5.38516481]\n"," [ 8.06225775  6.70820393  3.16227766  0.          3.60555128]\n"," [10.77032961 10.          5.38516481  3.60555128  0.        ]]\n"],"name":"stdout"}]},{"metadata":{"id":"SR4esOG6vtM-","colab_type":"text"},"cell_type":"markdown","source":["Матрица расстояний"]},{"metadata":{"id":"iR9b7KwFvx48","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":102},"outputId":"0384c1bb-8987-4aff-d0d4-29ab033728cf","executionInfo":{"status":"ok","timestamp":1552459254372,"user_tz":-180,"elapsed":684,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["np.cov(x)"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 2. , -2. , -1. , -5. , -4. ],\n","       [-2. ,  2. ,  1. ,  5. ,  4. ],\n","       [-1. ,  1. ,  0.5,  2.5,  2. ],\n","       [-5. ,  5. ,  2.5, 12.5, 10. ],\n","       [-4. ,  4. ,  2. , 10. ,  8. ]])"]},"metadata":{"tags":[]},"execution_count":23}]},{"metadata":{"id":"DyiMCcI9yGU2","colab_type":"text"},"cell_type":"markdown","source":["Матрица ковариаций"]},{"metadata":{"id":"KjJRQ11ryEdj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":201},"outputId":"bf07ba6d-bb6e-423c-f718-5dd6905bb111","executionInfo":{"status":"ok","timestamp":1552466066822,"user_tz":-180,"elapsed":631,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["from sklearn.cluster import KMeans\n","import random\n","y_pred = KMeans(n_clusters=2, random_state=random.randint(0,100)).fit_predict(x)\n","\n","plt.subplot(221)\n","plt.scatter(x[:,0], x[:, 1], c=y_pred)"],"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f50d6b95f50>"]},"metadata":{"tags":[]},"execution_count":102},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAOUAAACnCAYAAADuWZtxAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi40LCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcv7US4rQAADU5JREFUeJzt3X9Mm3UeB/B36Q+6FugaApvgQM5c\nMk9jmI7LStBtEdzpImYYBiFjLtG4aZiYGHUSPRfJXODUwBgZxDF3uhC3IGMkp24y1wvxQC/bHZma\nqZtx2cANjrWW9dfa0vtDj5Ot0JYffT6w9+uv5XmefZ83De8+3z59ngdVMBgMgojEiFM6ABGNx1IS\nCcNSEgnDUhIJw1ISCcNSEgmjmekBh4ZGwm5jNhtgs7lmetfTwkyRkZZJWh4g8kwpKYkhlytypNRo\n1ErsdlLMFBlpmaTlAaafidNXohkUCATg9XqnNUbYUjqdTlRUVKC8vBylpaXo7u6e1g6J5iO73YbK\nyqexYsUyZGRkoLj4UXz66dEpjRX2M+Xhw4eRlZWF559/HpcvX8bjjz+OTz75ZEo7I5qPgsEgnnhi\nI7q7/z62bHBwEN988zX27n0PFktuVOOFPVKazWbY7XYAgMPhgNlsjjIy0fz28cd/w+ef3ziDHBoa\nxHvvtUQ9Xtgj5dq1a9He3o6CggI4HA40NzdHvROi+ez06X9jdHQ05Lrz589HPV7YUh45cgRpaWlo\naWnBmTNnUFVVhfb29gm3N5sNEZ19muh0sJKYKTLSMimdZ+nS30+4Li1tcdT5wpby1KlTyMvL+3Xn\nSzE4OIhAIAC1OnTxIv1+JpLvM2OJmSIjLZOEPA89tA533rkLX399etxyvV6Phx9+dMJ8U/6eMjMz\nE319fQCA/v5+GI3GCQtJdDPS6XSor2+ExZILrVYLALjttt/hhRdeRlFRcdTjqcLd5Ox0OlFVVYXh\n4WH4/X5UVlbCYrFMuH0k71oS3t2ux0yRkZZJUp5gMIi+vn/B53PirruWY8GCBZNuP9GRMuz01Wg0\nor6+fmopiW4iKpUK2dn3TPuNglf0EAnDUhIJw1ISCcNSEgnDUhIJw1ISCcNSEgnDUhIJw1ISCcNS\nEgnDUhIJw1ISCcNSEgnDUhIJw1ISCcNSEgnDUhIJw1ISCcNSEgnDUhIJw1ISCcNSEgnDUhIJw1IS\n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\n","text/plain":["<Figure size 576x396 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"wQo0FNp9KCoR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":102},"outputId":"54d1cfdd-7896-497f-9fa2-33cdfbd712f5","executionInfo":{"status":"ok","timestamp":1552465600045,"user_tz":-180,"elapsed":788,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["x= np.asarray(x)\n","x.reshape((5,2))"],"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 2,  4],\n","       [ 4,  2],\n","       [ 7,  6],\n","       [10,  5],\n","       [12,  8]])"]},"metadata":{"tags":[]},"execution_count":81}]},{"metadata":{"id":"I8cr7GLcKU9J","colab_type":"code","colab":{}},"cell_type":"code","source":["y_pred[2:]=2"],"execution_count":0,"outputs":[]},{"metadata":{"id":"3lx4qPyy1h6W","colab_type":"code","colab":{}},"cell_type":"code","source":["S = [[13.6,5.8],[5.8]]"],"execution_count":0,"outputs":[]},{"metadata":{"id":"eZvBVHiN13ML","colab_type":"code","colab":{}},"cell_type":"code","source":["v = np.asarray([-5,-2])#расстояния между признаками соответствующих наблюдений\n","S1 = np.asarray([[0.19,-0.28],[-0.28,0.65]])\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Hy_BpLAu2q8s","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"37958865-72a6-4a3d-c38e-7305a1a7811b","executionInfo":{"status":"ok","timestamp":1552460870235,"user_tz":-180,"elapsed":481,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["(np.dot(np.dot(v.transpose(),S1),v))**0.5"],"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.3228756555322951"]},"metadata":{"tags":[]},"execution_count":47}]},{"metadata":{"id":"85UimCec3IPs","colab_type":"text"},"cell_type":"markdown","source":["Расстояние махаланобиса между первым и вторым элементом"]},{"metadata":{"id":"kdOcOJ522u_M","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"089d1ab2-a7a2-472e-dc0b-18bf4b50e1d4","executionInfo":{"status":"ok","timestamp":1552460559178,"user_tz":-180,"elapsed":609,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["S1"],"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.19, -0.28],\n","       [-0.28,  0.65]])"]},"metadata":{"tags":[]},"execution_count":45}]},{"metadata":{"id":"HBXgY8SA3DCi","colab_type":"code","colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":74},"outputId":"6cc85112-fa30-4d51-8647-7d880f7728af","executionInfo":{"status":"ok","timestamp":1552462160038,"user_tz":-180,"elapsed":11248,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()"],"execution_count":49,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-a47cbc1d-7dff-478e-8481-ebdaf7e0c2f3\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-a47cbc1d-7dff-478e-8481-ebdaf7e0c2f3\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving primer.xlsx to primer.xlsx\n"],"name":"stdout"}]},{"metadata":{"id":"UDhy4Bio823W","colab_type":"code","colab":{}},"cell_type":"code","source":["import pandas as pd\n","\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"ePxC_gJF9bj9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":540},"outputId":"b236ff50-379f-4b8d-92cf-b1d1b460a029","executionInfo":{"status":"error","timestamp":1552463115683,"user_tz":-180,"elapsed":636,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["pd.read_table(uploaded)"],"execution_count":72,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m\u001b[0m","\u001b[0;31mValueError\u001b[0mTraceback (most recent call last)","\u001b[0;32m<ipython-input-72-96e05627edb8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_table\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muploaded\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python2.7/dist-packages/pandas/io/parsers.pyc\u001b[0m in \u001b[0;36mparser_f\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, escapechar, comment, encoding, dialect, tupleize_cols, error_bad_lines, warn_bad_lines, skipfooter, skip_footer, doublequote, delim_whitespace, as_recarray, compact_ints, use_unsigned, low_memory, buffer_lines, memory_map, float_precision)\u001b[0m\n\u001b[1;32m    707\u001b[0m                     skip_blank_lines=skip_blank_lines)\n\u001b[1;32m    708\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 709\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    710\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    711\u001b[0m     \u001b[0mparser_f\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python2.7/dist-packages/pandas/io/parsers.pyc\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    431\u001b[0m     \u001b[0mcompression\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_infer_compression\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcompression\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    432\u001b[0m     filepath_or_buffer, _, compression = get_filepath_or_buffer(\n\u001b[0;32m--> 433\u001b[0;31m         filepath_or_buffer, encoding, compression)\n\u001b[0m\u001b[1;32m    434\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'compression'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcompression\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    435\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python2.7/dist-packages/pandas/io/common.pyc\u001b[0m in \u001b[0;36mget_filepath_or_buffer\u001b[0;34m(filepath_or_buffer, encoding, compression)\u001b[0m\n\u001b[1;32m    209\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mis_file_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m         \u001b[0mmsg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Invalid file path or buffer object type: {_type}\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_type\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcompression\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Invalid file path or buffer object type: <type 'dict'>"]}]},{"metadata":{"id":"SBVHa1UL9t8Y","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":588},"outputId":"a7279648-b01d-4f43-967f-4ca5c60256c9","executionInfo":{"status":"error","timestamp":1552463005454,"user_tz":-180,"elapsed":641,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["from openpyxl import load_workbook\n","\n","# Load in the workbook\n","wb = load_workbook('C:/Users\\\\icef_guest\\\\Downloads\\\\primer.xlsx')\n","\n","# Get sheet names\n","print(wb.get_sheet_names())"],"execution_count":71,"outputs":[{"output_type":"error","ename":"IOError","evalue":"ignored","traceback":["\u001b[0;31m\u001b[0m","\u001b[0;31mIOError\u001b[0mTraceback (most recent call last)","\u001b[0;32m<ipython-input-71-20d085959050>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Load in the workbook\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mwb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mload_workbook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'C:/Users\\\\icef_guest\\\\Downloads\\\\primer.xlsx'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Get sheet names\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python2.7/dist-packages/openpyxl/reader/excel.pyc\u001b[0m in \u001b[0;36mload_workbook\u001b[0;34m(filename, read_only, keep_vba, data_only, guess_types, keep_links)\u001b[0m\n\u001b[1;32m    172\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    173\u001b[0m     \"\"\"\n\u001b[0;32m--> 174\u001b[0;31m     \u001b[0marchive\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_validate_archive\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    175\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    176\u001b[0m     \u001b[0msrc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marchive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mARC_CONTENT_TYPES\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python2.7/dist-packages/openpyxl/reader/excel.pyc\u001b[0m in \u001b[0;36m_validate_archive\u001b[0;34m(filename)\u001b[0m\n\u001b[1;32m    119\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    120\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 121\u001b[0;31m         \u001b[0marchive\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mZipFile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'r'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mZIP_DEFLATED\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    122\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mBadZipfile\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    123\u001b[0m         \u001b[0mf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrepair_central_directory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mis_file_like\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python2.7/zipfile.pyc\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, file, mode, compression, allowZip64)\u001b[0m\n\u001b[1;32m    754\u001b[0m             \u001b[0mmodeDict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'r'\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0;34m'rb'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'w'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'wb'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'a'\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0;34m'r+b'\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    755\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 756\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmodeDict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    757\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mIOError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    758\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mmode\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'a'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mIOError\u001b[0m: [Errno 2] No such file or directory: 'C:/Users\\\\icef_guest\\\\Downloads\\\\primer.xlsx'"]}]},{"metadata":{"id":"yGGzNTz19wM8","colab_type":"code","colab":{}},"cell_type":"code","source":["random.randint?"],"execution_count":0,"outputs":[]},{"metadata":{"id":"D6v0zraELqn1","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}